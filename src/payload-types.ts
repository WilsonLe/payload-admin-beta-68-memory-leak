/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    pages: Page;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  content?: LayoutBlock[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LayoutBlock".
 */
export interface LayoutBlock {
  type?: 'grid' | null;
  width?: string | null;
  height?: string | null;
  mt?: string | null;
  mb?: string | null;
  ml?: string | null;
  mr?: string | null;
  pt?: string | null;
  pb?: string | null;
  pl?: string | null;
  pr?: string | null;
  numCols?: number | null;
  numRows?: number | null;
  colGap?: string | null;
  rowGap?: string | null;
  jItems?: ('start' | 'end' | 'center' | 'stretch') | null;
  aItems?: ('start' | 'end' | 'center' | 'stretch') | null;
  gridBx?:
    | {
        colS?: number | null;
        colE?: number | null;
        rowS?: number | null;
        rowE?: number | null;
        type?: 'grid' | null;
        mt?: string | null;
        mb?: string | null;
        ml?: string | null;
        mr?: string | null;
        pt?: string | null;
        pb?: string | null;
        pl?: string | null;
        pr?: string | null;
        numCols?: number | null;
        numRows?: number | null;
        colGap?: string | null;
        rowGap?: string | null;
        jItems?: ('start' | 'end' | 'center' | 'stretch') | null;
        aItems?: ('start' | 'end' | 'center' | 'stretch') | null;
        gridBx?: (LayoutBlock | RichTextBlock)[] | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'layout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextBlock".
 */
export interface RichTextBlock {
  richTextContent: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'rich-text';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextLayoutBlock".
 */
export interface RichTextLayoutBlock {
  type?: 'grid' | null;
  width?: string | null;
  height?: string | null;
  mt?: string | null;
  mb?: string | null;
  ml?: string | null;
  mr?: string | null;
  pt?: string | null;
  pb?: string | null;
  pl?: string | null;
  pr?: string | null;
  numCols?: number | null;
  numRows?: number | null;
  colGap?: string | null;
  rowGap?: string | null;
  jItems?: ('start' | 'end' | 'center' | 'stretch') | null;
  aItems?: ('start' | 'end' | 'center' | 'stretch') | null;
  gridBx?:
    | {
        colS?: number | null;
        colE?: number | null;
        rowS?: number | null;
        rowE?: number | null;
        type?: 'grid' | null;
        mt?: string | null;
        mb?: string | null;
        ml?: string | null;
        mr?: string | null;
        pt?: string | null;
        pb?: string | null;
        pl?: string | null;
        pr?: string | null;
        numCols?: number | null;
        numRows?: number | null;
        colGap?: string | null;
        rowGap?: string | null;
        jItems?: ('start' | 'end' | 'center' | 'stretch') | null;
        aItems?: ('start' | 'end' | 'center' | 'stretch') | null;
        gridBx?: RichTextBlock[] | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'layout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}